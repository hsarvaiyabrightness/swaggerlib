<?php
/**
 * OrderShipmentInfoResponseProduct
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * Shipping Label API
 *
 * Shipping Label application
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 3.0.51
 */
/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * OrderShipmentInfoResponseProduct Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class OrderShipmentInfoResponseProduct implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'OrderShipmentInfoResponse.Product';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'hs6code' => 'string',
        'commodity_code' => 'string',
        'value' => '\Swagger\Client\Model\Value',
        'description' => 'string',
        'percentage_duty_rate' => 'string',
        'volumetric_duty_rate' => 'string',
        'item_duty_rate' => 'string',
        'additional_duty_rate' => 'string',
        'tax_rate' => 'string',
        'duty_value' => '\Swagger\Client\Model\Value',
        'tax_value' => '\Swagger\Client\Model\Value',
        'product_total' => '\Swagger\Client\Model\Value',
        'hs6code_description' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'hs6code' => null,
        'commodity_code' => null,
        'value' => null,
        'description' => null,
        'percentage_duty_rate' => null,
        'volumetric_duty_rate' => null,
        'item_duty_rate' => null,
        'additional_duty_rate' => null,
        'tax_rate' => null,
        'duty_value' => null,
        'tax_value' => null,
        'product_total' => null,
        'hs6code_description' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'hs6code' => 'hs6code',
        'commodity_code' => 'commodityCode',
        'value' => 'value',
        'description' => 'description',
        'percentage_duty_rate' => 'percentageDutyRate',
        'volumetric_duty_rate' => 'volumetricDutyRate',
        'item_duty_rate' => 'itemDutyRate',
        'additional_duty_rate' => 'additionalDutyRate',
        'tax_rate' => 'taxRate',
        'duty_value' => 'dutyValue',
        'tax_value' => 'taxValue',
        'product_total' => 'productTotal',
        'hs6code_description' => 'hs6codeDescription'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'hs6code' => 'setHs6code',
        'commodity_code' => 'setCommodityCode',
        'value' => 'setValue',
        'description' => 'setDescription',
        'percentage_duty_rate' => 'setPercentageDutyRate',
        'volumetric_duty_rate' => 'setVolumetricDutyRate',
        'item_duty_rate' => 'setItemDutyRate',
        'additional_duty_rate' => 'setAdditionalDutyRate',
        'tax_rate' => 'setTaxRate',
        'duty_value' => 'setDutyValue',
        'tax_value' => 'setTaxValue',
        'product_total' => 'setProductTotal',
        'hs6code_description' => 'setHs6codeDescription'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'hs6code' => 'getHs6code',
        'commodity_code' => 'getCommodityCode',
        'value' => 'getValue',
        'description' => 'getDescription',
        'percentage_duty_rate' => 'getPercentageDutyRate',
        'volumetric_duty_rate' => 'getVolumetricDutyRate',
        'item_duty_rate' => 'getItemDutyRate',
        'additional_duty_rate' => 'getAdditionalDutyRate',
        'tax_rate' => 'getTaxRate',
        'duty_value' => 'getDutyValue',
        'tax_value' => 'getTaxValue',
        'product_total' => 'getProductTotal',
        'hs6code_description' => 'getHs6codeDescription'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }



    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['hs6code'] = isset($data['hs6code']) ? $data['hs6code'] : null;
        $this->container['commodity_code'] = isset($data['commodity_code']) ? $data['commodity_code'] : null;
        $this->container['value'] = isset($data['value']) ? $data['value'] : null;
        $this->container['description'] = isset($data['description']) ? $data['description'] : null;
        $this->container['percentage_duty_rate'] = isset($data['percentage_duty_rate']) ? $data['percentage_duty_rate'] : null;
        $this->container['volumetric_duty_rate'] = isset($data['volumetric_duty_rate']) ? $data['volumetric_duty_rate'] : null;
        $this->container['item_duty_rate'] = isset($data['item_duty_rate']) ? $data['item_duty_rate'] : null;
        $this->container['additional_duty_rate'] = isset($data['additional_duty_rate']) ? $data['additional_duty_rate'] : null;
        $this->container['tax_rate'] = isset($data['tax_rate']) ? $data['tax_rate'] : null;
        $this->container['duty_value'] = isset($data['duty_value']) ? $data['duty_value'] : null;
        $this->container['tax_value'] = isset($data['tax_value']) ? $data['tax_value'] : null;
        $this->container['product_total'] = isset($data['product_total']) ? $data['product_total'] : null;
        $this->container['hs6code_description'] = isset($data['hs6code_description']) ? $data['hs6code_description'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets hs6code
     *
     * @return string
     */
    public function getHs6code()
    {
        return $this->container['hs6code'];
    }

    /**
     * Sets hs6code
     *
     * @param string $hs6code hs6code
     *
     * @return $this
     */
    public function setHs6code($hs6code)
    {
        $this->container['hs6code'] = $hs6code;

        return $this;
    }

    /**
     * Gets commodity_code
     *
     * @return string
     */
    public function getCommodityCode()
    {
        return $this->container['commodity_code'];
    }

    /**
     * Sets commodity_code
     *
     * @param string $commodity_code commodity_code
     *
     * @return $this
     */
    public function setCommodityCode($commodity_code)
    {
        $this->container['commodity_code'] = $commodity_code;

        return $this;
    }

    /**
     * Gets value
     *
     * @return \Swagger\Client\Model\Value
     */
    public function getValue()
    {
        return $this->container['value'];
    }

    /**
     * Sets value
     *
     * @param \Swagger\Client\Model\Value $value value
     *
     * @return $this
     */
    public function setValue($value)
    {
        $this->container['value'] = $value;

        return $this;
    }

    /**
     * Gets description
     *
     * @return string
     */
    public function getDescription()
    {
        return $this->container['description'];
    }

    /**
     * Sets description
     *
     * @param string $description description
     *
     * @return $this
     */
    public function setDescription($description)
    {
        $this->container['description'] = $description;

        return $this;
    }

    /**
     * Gets percentage_duty_rate
     *
     * @return string
     */
    public function getPercentageDutyRate()
    {
        return $this->container['percentage_duty_rate'];
    }

    /**
     * Sets percentage_duty_rate
     *
     * @param string $percentage_duty_rate percentage_duty_rate
     *
     * @return $this
     */
    public function setPercentageDutyRate($percentage_duty_rate)
    {
        $this->container['percentage_duty_rate'] = $percentage_duty_rate;

        return $this;
    }

    /**
     * Gets volumetric_duty_rate
     *
     * @return string
     */
    public function getVolumetricDutyRate()
    {
        return $this->container['volumetric_duty_rate'];
    }

    /**
     * Sets volumetric_duty_rate
     *
     * @param string $volumetric_duty_rate volumetric_duty_rate
     *
     * @return $this
     */
    public function setVolumetricDutyRate($volumetric_duty_rate)
    {
        $this->container['volumetric_duty_rate'] = $volumetric_duty_rate;

        return $this;
    }

    /**
     * Gets item_duty_rate
     *
     * @return string
     */
    public function getItemDutyRate()
    {
        return $this->container['item_duty_rate'];
    }

    /**
     * Sets item_duty_rate
     *
     * @param string $item_duty_rate item_duty_rate
     *
     * @return $this
     */
    public function setItemDutyRate($item_duty_rate)
    {
        $this->container['item_duty_rate'] = $item_duty_rate;

        return $this;
    }

    /**
     * Gets additional_duty_rate
     *
     * @return string
     */
    public function getAdditionalDutyRate()
    {
        return $this->container['additional_duty_rate'];
    }

    /**
     * Sets additional_duty_rate
     *
     * @param string $additional_duty_rate additional_duty_rate
     *
     * @return $this
     */
    public function setAdditionalDutyRate($additional_duty_rate)
    {
        $this->container['additional_duty_rate'] = $additional_duty_rate;

        return $this;
    }

    /**
     * Gets tax_rate
     *
     * @return string
     */
    public function getTaxRate()
    {
        return $this->container['tax_rate'];
    }

    /**
     * Sets tax_rate
     *
     * @param string $tax_rate tax_rate
     *
     * @return $this
     */
    public function setTaxRate($tax_rate)
    {
        $this->container['tax_rate'] = $tax_rate;

        return $this;
    }

    /**
     * Gets duty_value
     *
     * @return \Swagger\Client\Model\Value
     */
    public function getDutyValue()
    {
        return $this->container['duty_value'];
    }

    /**
     * Sets duty_value
     *
     * @param \Swagger\Client\Model\Value $duty_value duty_value
     *
     * @return $this
     */
    public function setDutyValue($duty_value)
    {
        $this->container['duty_value'] = $duty_value;

        return $this;
    }

    /**
     * Gets tax_value
     *
     * @return \Swagger\Client\Model\Value
     */
    public function getTaxValue()
    {
        return $this->container['tax_value'];
    }

    /**
     * Sets tax_value
     *
     * @param \Swagger\Client\Model\Value $tax_value tax_value
     *
     * @return $this
     */
    public function setTaxValue($tax_value)
    {
        $this->container['tax_value'] = $tax_value;

        return $this;
    }

    /**
     * Gets product_total
     *
     * @return \Swagger\Client\Model\Value
     */
    public function getProductTotal()
    {
        return $this->container['product_total'];
    }

    /**
     * Sets product_total
     *
     * @param \Swagger\Client\Model\Value $product_total product_total
     *
     * @return $this
     */
    public function setProductTotal($product_total)
    {
        $this->container['product_total'] = $product_total;

        return $this;
    }

    /**
     * Gets hs6code_description
     *
     * @return string
     */
    public function getHs6codeDescription()
    {
        return $this->container['hs6code_description'];
    }

    /**
     * Sets hs6code_description
     *
     * @param string $hs6code_description hs6code_description
     *
     * @return $this
     */
    public function setHs6codeDescription($hs6code_description)
    {
        $this->container['hs6code_description'] = $hs6code_description;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    #[\ReturnTypeWillChange]
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    #[\ReturnTypeWillChange]
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    #[\ReturnTypeWillChange]
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}
